generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  username       String    @unique
  firstName  String
  lastName String
  role           UserRole

  personalInfo   PersonalInfo? @relation(fields: [personalInfoId], references: [id])
  personalInfoId Int?          @unique

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  sentMessages     Chat[]   @relation("SentMessages")
  supportRequests Support[] 
  notifications  notif[]  @relation("UserNotifications")
  histories history[]
}

model PersonalInfo {
  id        Int      @id @default(autoincrement())
  fname     String
  lname     String
  phone     String
  gender    Gender
  address   String
  birthdate String

  user      User?
} 

model OTP {
  email     String @id
  otp       String
  expiresAt DateTime
}

model PlantCategory {
  id        Int    @id @default(autoincrement())
  name      String
  imageUrl  String
  plants    PlantInfo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlantInfo {
  id               Int            @id @default(autoincrement())
  name             String
  scientificName   String
  genus            String
  imageUrl         String
  description      String
  categoryId       Int
  category         PlantCategory    @relation(fields: [categoryId], references: [id])
  galleryImages    PlantGallery[]
 
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model PlantGallery {
  id        Int   @id @default(autoincrement())
  imageUrl  String
  plantId   Int
  plant     PlantInfo  @relation(fields: [plantId], references: [id])
}

model Chat {
  id          Int      @id @default(autoincrement())
  request     String
  ai_response    String?
  senderId    Int

  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  createdAt   DateTime @default(now())
}

model Support {
  id          Int      @id @default(autoincrement())
  concern_msg String
  image       String

  customer_id Int
  customer    User     @relation(fields: [customer_id], references: [id])

  createdAt   DateTime @default(now())
}

model notif {
  id          Int @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())

  user        User     @relation("UserNotifications", fields: [userId], references: [id])
  userId      Int     

}

model history {
  id         Int @id @default(autoincrement())
  plant_id   String
  plant_name String

  userId     Int
  user       User     @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
}


